{"version":3,"sources":["routes.ts","redux/auth/authSelectors.ts","components/Routes/PrivateRoute.tsx","components/Routes/PublicRoute.tsx","components/Footer/Footer.tsx","components/Navigation/NavigationStyle.ts","components/Navigation/Navigation.tsx","components/assets/IconLogout/IconLogout.tsx","components/UserMenu/UserMenu.tsx","components/Header/Header.tsx","components/Section/Section.tsx","components/SpinnerCircle/SpinnerVocabulary.tsx","components/App.tsx","index.tsx","redux/Vocabulary/vocabularyReducer.ts","redux/auth/authReducer.ts","redux/store.ts","components/UserMenu/UserMenu.module.scss","redux/auth/authActions.ts","redux/auth/authOperation.ts","redux/Vocabulary/vocabularySelectors.ts","components/Header/Header.module.scss","components/Footer/Footer.module.scss","components/SpinnerCircle/SpinnerVocabulary.module.scss","helpers/breakpoints.js","components/Navigation/Navigation.module.scss","images/LogoDesktop.png","components/Section/Section.module.scss","redux/Vocabulary/vocabularyActions.ts"],"names":["path","label","exact","component","lazy","privat","restricted","state","auth","token","user","name","PrivateRoute","Component","routeProps","isAuthenticated","useSelector","authSelectors","render","props","to","PublicRoute","Footer","className","s","footer","title","stylesM","link","display","textDecoration","padding","marginBottom","fontWeight","color","fontSize","activeLink","stylesD","Navigation","isMobile","screen","list","routes","map","route","style","activeStyle","IconClose","version","xmlns","width","height","viewBox","d","UserMenu","logOut","length","wrapper","content","total","btn","type","onClick","IconLogout","defaultProps","Header","dispatch","useAppDispatch","isAuth","vocabularySelectors","getWords","header","wrapImg","src","LogoDesktop","alt","authOperation","vocabularyActions","resetWordList","Section","children","container","SpinnerVocabulary","spinner","App","loading","getLoading","useEffect","getCurrentUser","fallback","key","ReactDOM","store","persistor","document","querySelector","onAddWord","payload","fetchWords","onRemoveWord","filter","item","_id","initState","items","createReducer","builder","addCase","addWordSuccess","fetchWordsSuccess","removeWordSuccess","changeFilter","addWordRequest","addWordError","fetchWordsRequest","fetchWordsError","removeWordRequest","removeWordError","combineReducers","initialState","email","addUser","getUser","authActions","registerSuccess","logInSuccess","logOutSuccess","getCurrentUserSuccess","error","code","message","logInError","registerError","registerRequest","logInRequest","authPersistConfig","storage","whitelist","configureStore","reducer","words","vocabularyReducer","persistReducer","authReducer","persistStore","useDispatch","module","exports","createAction","logOutRequest","logOutError","getCurrentUserRequest","getCurrentUserError","axios","defaults","baseURL","headers","common","Authorization","register","password","passwordConfirm","a","post","data","response","logIn","getState","persistedToken","get","getFilter","getWordList","createSelector","word","translate","toLocaleLowerCase","includes","useScreen","useBreakpoints","breakpoints","desktop","laptop","mobile","breakpoint"],"mappings":"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","file":"static/js/main.c4fe1a6a.chunk.js","sourcesContent":["import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/signup',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./components/SignUp/SignUp')),\r\n    privat: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./components/SignIn/SignIn')),\r\n    privat: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/list',\r\n    label: 'Add word',\r\n    exact: true,\r\n    component: lazy(() => import('./views/VocabularyView/VocabularyView')),\r\n    privat: true,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/learn',\r\n    label: 'Learning',\r\n    exact: true,\r\n    component: lazy(() => import('./views/VocabularyLearn/VocabularyLearn')),\r\n    privat: true,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/check',\r\n    label: 'Playing',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Playing/Playing')),\r\n    privat: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import {RootState} from '../store';\r\n\r\nconst getToken = (state:RootState) => state.auth.token;\r\nconst getName = (state:RootState) => state.auth.user.name;\r\n\r\nexport default { getToken, getName };\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport authSelectors from '../../redux/auth/authSelectors';\r\nimport {iRoutes} from \"../../types/iRoutes\";\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /\r\n */\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...routeProps}: iRoutes) => {\r\n    const isAuthenticated: string = useSelector(authSelectors.getToken);\r\n    return (\r\n        <Route\r\n            {...routeProps}\r\n            render={(props: {}) => isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\"/>\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport authSelectors from '../../redux/auth/authSelectors';\r\nimport {iRoutes} from \"../../types/iRoutes\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /tasks\r\n * - В противном случае рендерит компонент\r\n */\r\n\r\n\r\nconst PublicRoute = ({ component: Component, ...routeProps }:iRoutes) => {\r\n  const isAuthenticated:string = useSelector(authSelectors.getToken);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props:{}) =>\r\n        isAuthenticated && routeProps.restricted ? (\r\n          <Redirect to=\"/list\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, {FC} from 'react';\r\n\r\nimport s from \"./Footer.module.scss\";\r\n\r\nconst Footer:FC = () => {\r\n    return (\r\n    <div className={s.footer}>\r\n      <div className={s.title}>\r\n        <p>Vocabulary Building</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\n","export const stylesM = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 7,\r\n    marginBottom:'15px',\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n    fontSize:'14px'\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport const stylesD = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};","import React, {FC, ReactElement} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport s from './Navigation.module.scss';\r\nimport {stylesD, stylesM} from './NavigationStyle';\r\nimport screen from \"../../helpers/breakpoints\";\r\n\r\nconst Navigation: FC = (): ReactElement => {\r\n    const typeDevice: string = screen();\r\n    const isMobile: boolean = typeDevice === 'mobile';\r\n\r\n    return (\r\n        <nav className={s.list}>\r\n\r\n            {routes.map(route => route.privat ? (\r\n                <NavLink exact to={route.path} style={isMobile ? stylesM.link : stylesD.link}\r\n                         activeStyle={isMobile ? stylesM.activeLink : stylesD.activeLink}>\r\n                    {route.label}\r\n                </NavLink>) : null)}\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\n\r\nconst IconClose = () => {\r\n    return (\r\n        <svg\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n        >\r\n            <path\r\n                d=\"M18.984 3q0.797 0 1.406 0.609t0.609 1.406v13.969q0 0.797-0.609 1.406t-1.406 0.609h-13.969q-0.844 0-1.43-0.586t-0.586-1.43v-3.984h2.016v3.984h13.969v-13.969h-13.969v3.984h-2.016v-3.984q0-0.844 0.586-1.43t1.43-0.586h13.969zM10.078 15.609l2.578-2.625h-9.656v-1.969h9.656l-2.578-2.625 1.406-1.406 5.016 5.016-5.016 5.016z\"></path>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default IconClose;\r\n","import React, {FC, ReactElement} from 'react';\r\n\r\nimport IconLogout from '../assets/IconLogout/IconLogout';\r\nimport s from './UserMenu.module.scss';\r\n\r\ntype PropTypes={\r\n  name?:string;\r\n  length?:number;\r\n  logOut:()=>void;\r\n  children?:never;\r\n}\r\n\r\nconst UserMenu:FC<PropTypes> = ({name, logOut,length}:PropTypes):ReactElement => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.content}>\r\n        <p className={s.total}>{`Total words: ${length}`}</p>\r\n        <p className={s.title}>{`Wellcome, ${name}`}</p>\r\n        <button\r\n          className={s.btn}\r\n          type=\"button\"\r\n          onClick={logOut}\r\n        >\r\n          <IconLogout/>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserMenu;\r\n\r\nUserMenu.defaultProps = {\r\n  name: '',\r\n  logOut: () => {},\r\n  length:0\r\n}","import React, {FC, ReactElement} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {useAppDispatch} from \"../../redux/store\";\r\n\r\n\r\nimport authSelectors from '../../redux/auth/authSelectors';\r\nimport authOperation from \"../../redux/auth/authOperation\";\r\nimport vocabularySelectors from \"../../redux/Vocabulary/vocabularySelectors\";\r\n\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nimport s from \"./Header.module.scss\";\r\nimport LogoDesktop from '../../images/LogoDesktop.png';\r\n\r\nimport vocabularyActions from \"../../redux/Vocabulary/vocabularyActions\";\r\n\r\nconst Header: FC = ():ReactElement => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const isAuth = useSelector(authSelectors.getToken);\r\n    const name: string = useSelector(authSelectors.getName);\r\n    const length: number = useSelector(vocabularySelectors.getWords).length;\r\n\r\n    const logOut = () => {\r\n        dispatch(authOperation.logOut());\r\n        dispatch(vocabularyActions.resetWordList());\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.wrapImg}>\r\n                <img src={LogoDesktop} alt='image header'/>\r\n            </div>\r\n            <div className={s.content}>\r\n                { !!isAuth.length && (\r\n                    <>\r\n                        <Navigation/>\r\n                        <UserMenu length={length} name={name} logOut={logOut}/>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React, {FC, ReactElement, ReactNode} from 'react';\r\n\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from '../Header/Header';\r\n\r\nimport s from './Section.module.scss';\r\n\r\ntype PropTypes={\r\n    children?: ReactNode;\r\n}\r\n\r\nconst Section:FC<PropTypes> = ({children}:PropTypes):ReactElement => {\r\n  return (\r\n    <section className={s.container}>\r\n      <Header/>\r\n      {children}\r\n      <Footer/>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, {FC} from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './SpinnerVocabulary.module.scss';\r\n\r\nconst SpinnerVocabulary: FC = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.spinner}>\r\n                <Loader type=\"Oval\" color=\"#2f5794\" height={150} width={150}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default SpinnerVocabulary;","import React, {FC, ReactElement, Suspense, useEffect} from 'react';\r\nimport {BrowserRouter, Switch} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {iRoutes}from '../types/iRoutes';\r\nimport routes from '../routes';\r\nimport PrivateRoute from './Routes/PrivateRoute';\r\nimport PublicRoute from './Routes/PublicRoute';\r\nimport Section from './Section/Section';\r\n\r\nimport authOperation from '../redux/auth/authOperation';\r\nimport vocabularySelectors from '../redux/Vocabulary/vocabularySelectors';\r\nimport {useAppDispatch} from \"../redux/store\";\r\nimport SpinnerVocabulary from \"./SpinnerCircle/SpinnerVocabulary\";\r\n\r\nconst App:FC=():ReactElement=> {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const loading:boolean = useSelector(vocabularySelectors.getLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperation.getCurrentUser());\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Section>\r\n        {loading && <SpinnerVocabulary/>}\r\n\r\n        <Suspense fallback={<SpinnerVocabulary/>}>\r\n          <Switch>\r\n            {routes.map((route:iRoutes) =>\r\n              route.privat ? (\r\n                <PrivateRoute key={route.label} {...route} />\r\n              ) : (\r\n                <PublicRoute key={route.label} {...route} />\r\n              ),\r\n            )}\r\n          </Switch>\r\n        </Suspense>\r\n      </Section>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {persistor, store} from './redux/store';\r\nimport {Provider} from 'react-redux';\r\nimport './styles/index.scss';\r\nimport {PersistGate} from 'redux-persist/integration/react';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <App/>\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.querySelector('#root'),\r\n);\r\n","import {combineReducers} from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit';\r\nimport {content} from \"../../types/types\"\r\nimport vocabularyActions from './vocabularyActions';\r\n\r\ntype ActionFeth = {\r\n    payload: content[];\r\n}\r\ntype ActionRemove = {\r\n    payload: string;\r\n}\r\ntype ActionAdd = {\r\n    payload: content;\r\n}\r\n\r\nconst onAddWord= (state: content[], {payload}: ActionAdd): content[] => [payload,...state];\r\nconst fetchWords = (state: content[], {payload}: ActionFeth): Array<content> => payload;\r\nconst onRemoveWord = (state: content[], {payload}: ActionRemove): content[] =>\r\n    state.filter(item => item._id !== payload);\r\n\r\n\r\nconst initState: content[] = [];\r\nconst items = createReducer(initState, builder => {\r\n    builder.addCase(vocabularyActions.addWordSuccess, onAddWord);\r\n    builder.addCase(vocabularyActions.fetchWordsSuccess, fetchWords);\r\n    builder.addCase(vocabularyActions.removeWordSuccess, onRemoveWord);\r\n    builder.addCase(vocabularyActions.resetWordList, ()=>initState);\r\n\r\n});\r\n\r\nconst filter = createReducer('', builder => {\r\n    builder.addCase(vocabularyActions.changeFilter, (state: string, {payload}) => payload,);\r\n});\r\n\r\n\r\nconst loading = createReducer(false, builder => {\r\n\r\n    builder.addCase(vocabularyActions.addWordRequest, () => true);\r\n    builder.addCase(vocabularyActions.addWordSuccess, () => false);\r\n    builder.addCase(vocabularyActions.addWordError, () => false);\r\n    builder.addCase(vocabularyActions.fetchWordsRequest, () => true);\r\n    builder.addCase(vocabularyActions.fetchWordsSuccess, () => false);\r\n    builder.addCase(vocabularyActions.fetchWordsError, () => false);\r\n    builder.addCase(vocabularyActions.removeWordRequest, () => true);\r\n    builder.addCase(vocabularyActions.removeWordSuccess, () => false);\r\n    builder.addCase(vocabularyActions.removeWordError, () => false);\r\n})\r\n\r\nexport default combineReducers({items, filter, loading});\r\n","import {combineReducers} from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\nimport {userCurrent,Error} from '../../types/user'\r\n\r\ntype PayloadAddUser = {\r\n    payload: {\r\n        token: string;\r\n        user: userCurrent;\r\n    };\r\n}\r\ntype PayloadGetUser = {\r\n    payload: {\r\n        email: string;\r\n        id: string;\r\n        name: string;\r\n    }\r\n}\r\ntype PayloadError = {\r\n    payload:Error\r\n}\r\n\r\nconst initialStateError: Error = {\r\n    code: 0,\r\n    message: '',\r\n};\r\n\r\nconst initialState: userCurrent = {\r\n    name: '',\r\n    email: '',\r\n};\r\n\r\nconst addUser = (state: userCurrent, {payload}: PayloadAddUser) => payload.user;\r\nconst getUser = (state: userCurrent, {payload}: PayloadGetUser) => payload;\r\n\r\nconst user = createReducer(initialState, builder => {\r\n    builder.addCase(authActions.registerSuccess, addUser);\r\n    builder.addCase(authActions.logInSuccess, addUser);\r\n    builder.addCase(authActions.logOutSuccess, () => initialState);\r\n    builder.addCase(authActions.getCurrentUserSuccess, getUser)\r\n})\r\n\r\nconst token = createReducer('', builder => {\r\n    builder.addCase(authActions.registerSuccess, (state: string, {payload}: PayloadAddUser) => payload.token);\r\n    builder.addCase(authActions.logInSuccess, (state: string, {payload}: PayloadAddUser) => payload.token);\r\n    builder.addCase(authActions.logOutSuccess, () => '');\r\n})\r\n\r\nconst error=createReducer(initialStateError,builder => {\r\n    builder.addCase(authActions.logInError,(state:Error,{payload}:PayloadError)=>payload);\r\n    builder.addCase(authActions.registerError,(state:Error,{payload}:PayloadError)=>payload);\r\n})\r\n\r\nconst loading = createReducer(false, builder => {\r\n    builder.addCase(authActions.registerRequest, () => true);\r\n    builder.addCase(authActions.registerSuccess, () => false);\r\n    builder.addCase(authActions.registerError, () => false);\r\n    builder.addCase(authActions.logInRequest, () => true);\r\n    builder.addCase(authActions.logInSuccess, () => false);\r\n    builder.addCase(authActions.logInError, () => false);\r\n})\r\n\r\n\r\nexport default combineReducers({user, token, loading,error});\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport {persistReducer, persistStore} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport vocabularyReducer from './Vocabulary/vocabularyReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        words: vocabularyReducer,\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n    },\r\n\r\n});\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>() // Export a hook that can be reused to resolve types","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserMenu_wrapper__35uxu\",\"content\":\"UserMenu_content__3zz3W\",\"btn\":\"UserMenu_btn__uIxAr\",\"title\":\"UserMenu_title__Yx_rA\",\"total\":\"UserMenu_total__1cDH9\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport {userCurrent,Error} from \"../../types/user\";\r\n\r\n type payload={\r\n   token:string;\r\n   user:userCurrent;\r\n\r\n}\r\ntype CurrentUser={\r\n  email:string;\r\n  id:string;\r\n  name:string;\r\n}\r\n\r\n// --------------------------------------------------------------------------------------\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction<payload>('auth/registerSuccess');\r\nconst registerError = createAction<{}>('auth/registerError');\r\n\r\nconst logInRequest = createAction('auth/logInRequest');\r\nconst logInSuccess = createAction<payload>('auth/logInSuccess');\r\nconst logInError = createAction<Error>('auth/logInError');\r\n\r\nconst logOutRequest = createAction('auth/logOutRequest');\r\nconst logOutSuccess = createAction('auth/logOutSuccess');\r\nconst logOutError = createAction<{}>('auth/logOutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction<CurrentUser>('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction<{}>('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  //\r\n  logInRequest,\r\n  logInSuccess,\r\n  logInError,\r\n  //\r\n  logOutRequest,\r\n  logOutSuccess,\r\n  logOutError,\r\n  //\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport {userCurrent,logInUser} from '../../types/user';\r\nimport authActions from './authActions';\r\nimport {AppDispatch, RootState} from \"../store\";\r\n\r\naxios.defaults.baseURL = 'https://sleepy-escarpment-78189.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token: string) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\ninterface request {\r\n    user: userCurrent;\r\n    token: string;\r\n}\r\n\r\ntype getUser = {\r\n    data: request;\r\n}\r\n\r\ntype CurrentUser = {\r\n    data: {\r\n        email: string;\r\n        id: string;\r\n        name: string;\r\n    }\r\n}\r\n\r\nconst register = ({name, email, password, passwordConfirm}: userCurrent) => async (\r\n    dispatch: AppDispatch,\r\n) => {\r\n    dispatch(authActions.registerRequest());\r\n    try {\r\n        const {data}: getUser = await axios.post('/users/signup', {\r\n            name,\r\n            email,\r\n            password,\r\n            passwordConfirm,\r\n        });\r\n        token.set(data.token);\r\n        dispatch(authActions.registerSuccess(data));\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error?.response?.data));\r\n    }\r\n};\r\n\r\nconst logIn = ({email, password}: logInUser) => async (dispatch: AppDispatch) => {\r\n    dispatch(authActions.logInRequest());\r\n    try {\r\n        const {data}: getUser = await axios.post('/users/signin', {\r\n            email,\r\n            password,\r\n        });\r\n        token.set(data.token);\r\n        dispatch(authActions.logInSuccess(data));\r\n    } catch (error) {\r\n        dispatch(authActions.logInError(error.response.data));\r\n    }\r\n};\r\n\r\nconst logOut = () => async (dispatch: AppDispatch) => {\r\n    dispatch(authActions.logOutRequest());\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authActions.logOutSuccess());\r\n    } catch (error) {\r\n        dispatch(authActions.logOutError(error));\r\n    }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch: AppDispatch, getState: () => RootState) => {\r\n    const state: RootState = getState();\r\n    const persistedToken: string = state.auth.token;\r\n    if (!persistedToken) return;\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n    try {\r\n        const {data}: CurrentUser = await axios.get('/users/current');\r\n        dispatch(authActions.getCurrentUserSuccess(data));\r\n    } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error));\r\n    }\r\n};\r\n\r\nexport default {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    getCurrentUser,\r\n};\r\n","import {createSelector} from '@reduxjs/toolkit';\r\nimport {addWord, content} from \"../../types/types\"\r\nimport {RootState} from '../store';\r\n\r\nconst getWords = (state: RootState) => state.words.items;\r\n\r\n\r\n\r\nconst getLoading = (state: RootState) => state.words.loading;\r\n\r\nconst getFilter = (state: RootState) => state.words.filter;\r\n\r\n\r\nconst getWordList = createSelector(\r\n    [getWords, getFilter],\r\n    (words: content[], filter: string): content[] => {\r\n       return words.filter(({word, translate}:addWord) =>\r\n            word?.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) || translate?.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n        );\r\n    },\r\n);\r\n\r\nexport default {\r\n    getWords,\r\n    getFilter,\r\n    getLoading,\r\n    getWordList,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Kb14\",\"wrapImg\":\"Header_wrapImg__2Ob2k\",\"content\":\"Header_content__2tnmf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2itNb\",\"title\":\"Footer_title__6gkUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SpinnerVocabulary_container__267EU\",\"spinner\":\"SpinnerVocabulary_spinner__2cq9e\"};","import useBreakpoints from 'use-breakpoints-width';\r\n\r\nconst useScreen = () => {\r\n\r\n  const {breakpoint} = useBreakpoints({\r\n    breakpoints: {\r\n      desktop: 1024,\r\n      laptop: 768,\r\n      mobile: 0,\r\n    },\r\n  });\r\n\r\n  return breakpoint;\r\n}\r\n\r\nexport default useScreen;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navigation_list__3V5ou\"};","module.exports = __webpack_public_path__ + \"static/media/LogoDesktop.9bb80f5d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3B8tc\"};","import {createAction} from '@reduxjs/toolkit';\r\nimport {content} from '../../types/types'\r\n\r\nconst addWordRequest = createAction('vocabulary/addRequest');\r\nconst addWordSuccess = createAction<content>('vocabulary/addSuccess');\r\nconst addWordError = createAction<{}>('vocabulary/addError');\r\n\r\nconst fetchWordsRequest = createAction('vocabulary/fetchRequest');\r\nconst fetchWordsSuccess = createAction<content[]>('vocabulary/fetchSuccess');\r\nconst fetchWordsError = createAction<{}>('vocabulary/fetchError');\r\n\r\nconst removeWordRequest = createAction('vocabulary/removeRequest');\r\nconst removeWordSuccess = createAction<string>('vocabulary/removeSuccess');\r\nconst removeWordError = createAction<{}>('vocabulary/removeError');\r\n\r\nconst changeFilter = createAction<string>('vocabulary/changeFilter');\r\n\r\nconst resetWordList = createAction('vocabulary/resetWordList');\r\n\r\n\r\nexport default {\r\n    addWordRequest,\r\n    addWordSuccess,\r\n    addWordError,\r\n    //\r\n    fetchWordsRequest,\r\n    fetchWordsSuccess,\r\n    fetchWordsError,\r\n    //\r\n    removeWordRequest,\r\n    removeWordSuccess,\r\n    removeWordError,\r\n    //\r\n    changeFilter,\r\n    resetWordList\r\n};\r\n"],"sourceRoot":""}