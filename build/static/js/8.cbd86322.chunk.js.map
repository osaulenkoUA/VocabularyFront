{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/Vocabulary/vocabularyOperation.ts","views/VocabularyLearn/VocabularyLearn.module.scss","views/VocabularyLearn/VocabularyLearn.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","axios","defaults","baseURL","postWord","word","translate","dispatch","a","vocabularyActions","addWordRequest","post","data","addWordSuccess","addWordError","fetchWords","fetchWordsRequest","get","reverse","fetchWordsSuccess","fetchWordsError","removeWord","id","removeWordRequest","delete","removeWordSuccess","error","removeWordError","module","exports","VocabularyLearn","useState","idx","setIdx","istranslate","setIstranslate","words","useSelector","vocabularySelectors","getWords","contLength","useAppDispatch","useEffect","vocabularyOperation","className","s","wrapper","check","content","wrapBtn","onClick","min","max","number","Math","floor","random"],"mappings":"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","file":"static/js/8.cbd86322.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {addWord, content} from '../../types/types'\r\nimport vocabularyActions from './vocabularyActions';\r\nimport {AppDispatch} from '../store';\r\n\r\naxios.defaults.baseURL = 'https://sleepy-escarpment-78189.herokuapp.com';\r\n\r\ntype addData = {\r\n    data: content;\r\n}\r\ntype getData = {\r\n    data: content[];\r\n}\r\nconst postWord = ({word, translate}: addWord) => async (dispatch: AppDispatch) => {\r\n    dispatch(vocabularyActions.addWordRequest());\r\n    try {\r\n        const {data}: addData = await axios.post('/vocabulary/addword', {word, translate});\r\n        dispatch(vocabularyActions.addWordSuccess(data));\r\n    } catch (error) {\r\n        dispatch(vocabularyActions.addWordError(error));\r\n    }\r\n};\r\n\r\nconst fetchWords= () => async (dispatch: AppDispatch) => {\r\n    dispatch(vocabularyActions.fetchWordsRequest());\r\n    try {\r\n        const {data}: getData = await axios.get('/vocabulary/words');\r\n        data.reverse();\r\n        dispatch(vocabularyActions.fetchWordsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(vocabularyActions.fetchWordsError(error));\r\n    }\r\n};\r\n\r\nconst removeWord = (id: string) => async (dispatch: AppDispatch) => {\r\n    dispatch(vocabularyActions.removeWordRequest());\r\n    try {\r\n        axios.delete(`/vocabulary/delete/${id}`);\r\n        dispatch(vocabularyActions.removeWordSuccess(id));\r\n    } catch (error) {\r\n        dispatch(vocabularyActions.removeWordError(error));\r\n    }\r\n};\r\n\r\nexport default {\r\n    postWord,\r\n    fetchWords,\r\n    removeWord,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"VocabularyLearn_wrapper__4T9Xv\",\"check\":\"VocabularyLearn_check__2pTLJ\",\"content\":\"VocabularyLearn_content__E9f7A\",\"word\":\"VocabularyLearn_word__3TysQ\",\"translate\":\"VocabularyLearn_translate__2XbQM\",\"wrapBtn\":\"VocabularyLearn_wrapBtn__3ZQ7k\",\"enter\":\"VocabularyLearn_enter__1kx8y\",\"enterActive\":\"VocabularyLearn_enterActive__1KnyF\",\"exit\":\"VocabularyLearn_exit__2imax\",\"exitActive\":\"VocabularyLearn_exitActive__iF2mR\"};","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {useAppDispatch} from \"../../redux/store\";\r\n\r\nimport vocabularyOperation from '../../redux/Vocabulary/vocabularyOperation';\r\nimport vocabularySelectors from '../../redux/Vocabulary/vocabularySelectors';\r\n\r\nimport {content} from \"../../types/types\";\r\n\r\nimport s from './VocabularyLearn.module.scss';\r\n\r\n\r\nfunction VocabularyLearn() {\r\n    const [idx, setIdx] = useState<number>(0);\r\n    const [istranslate, setIstranslate] = useState<boolean>(false);\r\n\r\n    const words: content[] = useSelector(vocabularySelectors.getWords);\r\n    const contLength: number = words.length;\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (words.length === 0) dispatch(vocabularyOperation.fetchWords());\r\n    }, []);\r\n\r\n    const random = (min: number, max: number): number => min + Math.random() * (max - min);\r\n\r\n    const showTranslate = () => setIstranslate(true);\r\n\r\n    const next = () => {\r\n        setIstranslate(false);\r\n        const number: number = Math.floor(random(0, contLength));\r\n        number === idx ? setIdx(idx + 1) : setIdx(number);\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            <h2>Check of knolwledge</h2>\r\n\r\n            <div className={s.check}>\r\n                <div className={s.content}>\r\n                    <h3 className={s.word}>{words[idx]?.word}</h3>\r\n                    <h3 className={s.translate}>{istranslate ? words[idx]?.translate : null}</h3>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.wrapBtn}>\r\n                <button onClick={showTranslate}>Translate</button>\r\n                <button onClick={next}>Next word</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VocabularyLearn;\r\n"],"sourceRoot":""}